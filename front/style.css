html {
  background-color: rgb(202,230,230);
}

#word, #ajax_form, #pressure_chart_title, #pie_chart_title
{
   color: rgb(21, 6, 73);
}

#chair
{
  left: 50%;
  top: 60%;
  transform: translate(-50%, 0%);
  z-index: 1;
  position: fixed;
  height: 33%; 
}

#bg_l{
  background: rgb(193,204,225);
  position:fixed;
  width: calc(50vw + 8px);
  height: 9999px;
  top: -8px;
  left: -8px;
}

#direction_bg{
  position: absolute;
  width: 45vw;
  height: 65vh;
  top: 31vh;
  z-index: 2;
  display: flex;
  justify-content: center;
  align-items: center;
}
#direction, #direction_img{
  position: absolute;
  z-index:2;
}
#direction{
  height: 62vh;
  width: 38vw;
}
#direction_img
{
  width: 42vw;
  height: 70vh;
}
#direction_img :first-child, #direction_img :nth-child(2), #direction_img :nth-child(3), #direction_img :nth-child(4){
  position: absolute;
  width: 30px;
}
#direction :first-child, #direction :nth-child(2), #direction :nth-child(3), #direction :nth-child(4){
  background-color: rgba(136,128,52,0.2);
  color: rgb(59,82,139); 
  font-size: 2.8vh;
  width: 30px;
  height: 30px;
  padding: 2px;
  border-color: rgb(21,6,73);
  border-radius: 17px;
  text-align: center; 
  line-height: 30px;
  position: absolute;
}
#direction :first-child, #direction :nth-child(2), #direction_img :first-child, #direction_img :nth-child(2){
  left: 50%;
  transform: translate(-50%, 0%);
}
#diretion :first-child, #direction_img :first-child{
  top: 0%;
}
#direction :nth-child(2), #direction_img :nth-child(2){
  bottom: 0%;
}
#direction :nth-child(3), #direction :nth-child(4), #direction_img :nth-child(4), #direction_img :nth-child(3){
  top: calc(50% - 16px);
}
#direction :nth-child(4), #direction_img :nth-child(4){
  right: 0%;
}

#showfig
{
  top: 35vh;
  position: absolute;
  border-radius: 4pt;
  font-size: 2.2vh;
  padding: 1vh 1vw;
  left: 36vw;
  color: white;
  background-color: rgb(21,6,73);
  border: hidden;
}

#showfig:hover
{
  border: solid;
  border-color: white;
}

#ajax_form
{
    /*display: flex;
    flex-direction: row;
    justify-content: space-around;*/
    position: absolute;
    width: 50vw;
    height: 100vh;
    top: -4px;
    left: 50vw;
    font-size: 100%; 
}

#time_interval
{
    top: 33vh; 
    position: absolute;
    left: 5vw;
}

#bg_set_time
{
    position: absolute;
    width: 100vw;
    height: 75vh;
    background: radial-gradient(ellipse at center,rgba(136,128,152,0.5),rgba(136,128,52,0.1));
    z-index: 1;
    top: -48vh;
    left: 50%;
    transform: translate(-50%, 0%);
    display: flex;
    justify-content: center;
    border-radius: 0px 0px 1000vw 1000vw;
    /*transform: rotate(45deg);*/
}

#word
{
    font-size: 4vh;
    position: absolute;
    top: 50vh;
}

#timer
{
	position: absolute;
	display: flex;
	justify-content: space-between;
	width: 16vw;
	color: rgb(255,255,255);
	font-size: 120%;
	top: 57vh;
}

#setHour, #setMinute, #setSecond
{
    background-color: rgba(255,255,255,1);
    color: rgb(21,6,73);
    border-style: Hidden;
    border-radius: 15pt;
    width: 4vw;
    text-align: center;
    font-size: 100%;
    padding: 0.1vw;
}

#start, #reset
{
    width: 9vw;
    height: 6vh;
    position: absolute;
    top: 15vh;
    font-size: 2.2vh;
    border-radius: 38px;
    border: outset;
    border-width: 1pt;
    left: 50%;
    z-index: 5;
    color: rgb(21,6,73);
    background: rgb(251,239,169);
    display: inline-block;
    white-space: nowrap;
}
#start:hover, #reset:hover
{
    background: rgb(255,216,1);
    border: inset;
}
#start
{
    transform: translate(-120%, 0%);
}
#reset
{
    transform: translate(20%, 0%);
}


#pressure_chart_title, #pie_chart_title
{
    background-color: rgb(200,200,200);
    width: 0.8vw;
    height: 30vh;
    position: fixed;
    font-size: 4vh;
    z-index: 1;
    padding: 9px;
}
#pressure_chart_title
{
   top: 25%;
   left: calc(5vw - 4vh - 12px);
}
#pie_chart_title
{
   top: 30%;
   left: 95vw;
}


#figure
{
  width: 50vw;
}
#pie_chart, #pressure_chart
{
  position: fixed;
  width: 30%;
}
#pressure_chart
{
  top: 40vh;
  left: 8vw;
}
#pie_chart
{
  top: 45vh;
  left: 50%;
  transform: translate(30%, 0%);
}


#Warn
{
  z-index: 1;
  color: rgb(232,193,0);
  position: fixed;
  left: 75%;
  top: 60vh;
  transform: translate(-50%, -50%); 
  font-size: 3.2vh;
  display: inline-block;
  white-space: nowrap; 
}

.loader{
  color:#fff;
  position:fixed;
  box-sizing:border-box;
  left:-9999px;
  top:-9999px;
  width:0;
  height:0;
  overflow:hidden;
  z-index:999999
}

/* box-sizing 用於更改預設 CSS盒子模型 中所計算的寬度和高度*/
.loader:after,.loader:before{
  box-sizing:border-box;	/* border-box: width/height = border + padding + 內容的 width/height */	
  display:none
}

/* HTML class: is-active is a CSS helper. In order to show the loader, you need to add the helper CSS class. 
 * And to hide the loader, just do the opposite, removing the CSS helper from the loader. You can do it with JavaScript.*/

/* Define a background */
/*
.loader.is-active{
  background-color:rgba(0,0,0,.85);
  width:100%;
  height:100%;
  left:0;
  top:0
}
*/
.loader.is-active:after,.loader.is-active:before{
  display:block
}

@keyframes rotation{0%{transform:rotate(0)}to{transform:rotate(359deg)}}
@keyframes blink{0%{opacity:.6}to{opacity:1}}

.loader[data-text]:before{
  position: fixed;
  left: 25vw;
  /*top:50%;*/
  color: rgb(200,200,200);	/* currentColor */
  font-family: Helvetica,Arial,sans-serif;
  text-align: center;
  width: 100%;
  font-size: 3vh;
}

/* Define which data-text to display */
.loader[data-text=""]:before{content:"Loading..."}					/* use default value of data-text:"Loading" */
.loader[data-text]:not([data-text=""]):before{content:attr(data-text)}		/* if user change the value of data-text in HTML, then use that value */

.loader[data-text][data-blink]:before{animation:blink 1.2s linear infinite alternate}
.loader-default[data-text]:before{top:calc(60% - 24px - 3.5vh)}

/* Define the loading circle */
.loader-default:after{
  content:"";
  position:fixed;
  /* draw a square with only border, set one border transparent, set the border-radius to 50% and make it rotate. */
  width:48px;
  height:48px;
  border:8px solid rgb(200,200,200);
  border-left-color:transparent;
  border-radius:50%;
  top:60%;
  left:calc(75% - 24px);
  animation:rotation 1s linear infinite
}
/*
.loader-default[data-half]:after{border-right-color:transparent}	//loading circle becomes half circle
.loader-default[data-inverse]:after{animation-direction:reverse}	//loading circle rotate in reverse direction
*/
